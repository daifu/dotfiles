#!/Library/Frameworks/Python.framework/Versions/2.7/bin/python

import sys

def solve(f):
   res = 0
   N = int(f.readline()) 
   lst = []
   for _ in xrange(N):
      lst.append([int(x) for x in f.readline().split()])
   
   i = 0
   for pair1 in lst:
      i += 1
      for pair2 in lst[i:]:
         #res += hasPair(pair1, pair2)
         res += wires_intersect(pair1, pair2)
   return  res

def hasPair(pair1, pair2):
   """return n intersaction, 0 if non"""
   if ((pair1[0] > pair2[0] and pair1[1] < pair2[1]) or 
       (pair1[0] < pair2[0] and pair1[1] > pair2[1])):
       return 1
   else:
       return 0

def wires_intersect(a,b):
   c = (a[0] - b[0], a[1] - b[1])
   return ((c[0] < 0) ^ (c[1] < 0))

f = sys.stdin
n = int(f.readline())

for i in xrange(n):
   res = solve(f)
   print "Case #%d: %d" % (i+1, res)

