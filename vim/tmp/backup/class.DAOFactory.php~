<?php
/**
 * Data Access Object Factory
 *
 * Inits a DAO based on the Skoob config db_type and $dao_mapping definitions.
 * db_type is defined in webapp/config.inc.php as:
 *
 *     $SKOOB_CFG['db_type'] = 'somedb';
 *
 * Example of use:
 *
 * <code>
 *  DAOFactory::getDAO('SomeDAO');
 * </code>
 */
 class DAOFactory {
     /**
     *maps DAO from db_type and defines class names and path for initialization
     */
     static $dao_mapping = array (
     //Test DAO
         'TestDAO' => array( 
     //MySQL Version
         'mysql' => array( 'class' => 'TestMysqlDAO', 'path' =>  'TestMysqlDAO'),
     //faux Version
         'faux' => array( 'class' => 'TestFauxDAO', 'path' =>  'TestFauxDAO'),
     ),
     //User DAO
         'UserDAO' => array(
     //MySQL Version
         'mysql' => array( 'class' => 'UserMySQLDAO', 'path' => 'UserMySQLDAO')
     ),
     //UserError DAO
         'UserErrorDAO' => array(
     //MySQL Version
         'mysql' => array( 'class' => 'UserErrorMySQLDAO', 'path' => 'UserErrorMySQLDAO')
     ),
     //Book DAO
         'EbookDAO' => array(
    //MySQL Version
         'mysql' => array( 'class' => 'EbookMySQLDAO', 'path' => 'EbookMySQLDAO')
     ),
     //Shelf DAO
         'ShelfDAO' => array(
     //MySQL Version
         'mysql' => array( 'class' => 'ShelfMySQLDAO', 'path' => 'ShelfMySQLDAO')
     ),
     //Rating DAO
         'RatingDAO' => array(
     //MySQL Version
          'mysql' => array( 'class' => 'RatingMySQLDAO', 'path' => 'RatingMySQLDAO')
     )
     );
     
     /**
      *  Create a DAO instance and returns it
      *  
      *  @param string $dao_key the name of the dao you wish to init
      *  @returns object - a concrete dao instance
      */
     public static function getDAO($dao_key) {
         $db_type = self::getDBType();
         if (! isset(self::$dao_mapping[$dao_key]) ) {
             throw new Exception("No DAO mapping defined for: " . $dao_key);
         }
         if (! isset(self::$dao_mapping[$dao_key][$db_type])) {
             throw new Exception("No db mapping defined for '" . $dao_key . "' with db type: " . $db_type);
         }
         $class_info = self::$dao_mapping[$dao_key][$db_type];
         $dao = new $class_info['path'];
         return $dao;
     }
     /**
      *  Gets the db_type for our configured Skoob instance, defaults to mysql,
      *  db_type can optionally be defined in webapp/config.inc as:
      *  
      *  <code>
      *      $SKOOB_CFG['db_type'] = 'somedb';
      *  </code>
      */
     public static function getDBType() {
         $type = Config::getInstance()->getValue('db_type');
         $type = is_null($type) ? 'mysql' : $type;
         return $type;
     }
     
 }